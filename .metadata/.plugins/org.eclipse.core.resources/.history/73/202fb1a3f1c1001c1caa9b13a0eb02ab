package tidaMq;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutorService;

public class QueueNow extends queue {
	public queue q ;
	public static List<queue> listQueue =new ArrayList<>()  ;
	
	public void setQueue(String arg){
		boolean found = false;
 		for(queue qu: listQueue) {
 			System.out.println(qu.name) ;
 			if(qu.name.equals(arg)) {
 				this.q=qu ; 
 				System.out.println("use queue "+ q.name) ;
 				found=true;
 				break;
 			}
 		}
 		if(!found) System.out.println("queue is not exist") ;
	}
	
	public void addToQueue(String[] arg, ExecutorService executor) {
		File myfile = new File("/home/buidat/eclipse-workspacjava /tidaMqFile/"+ q.name + ".txt");
		
		if(q.capacity>=q.count) {
			if( q.persistent ) {
				Runnable writeDisk = new WriteToDiskThread("writedisk", myfile,arg[1]);
				executor.execute(writeDisk) ;	
			}
			
			q.enqueue(arg[1]);
		}else {
			System.out.println("Queue is Full");
		}
	}
	
	public void popQueue(String[] arg, ExecutorService executor) {
		if(q.count!=0) {
			File myfile1 = new File("/home/buidat/eclipse-workspacjava /tidaMqFile/"+ q.name + ".txt");
			if( q.persistent ) {
				Runnable popDisk = new WriteToDiskThread("deleteDisk", myfile1,"");
				executor.execute(popDisk) ;
			}
			String val = q.dequeue();
			System.out.println(val) ;
		}else {
			System.out.println("queue is empty") ;
		}
	}
	
	public void peekQueue() {
		
	}
	
	public void listQueue() {
		
	}
	
	public void deleteQueue() {
		
	}
}
