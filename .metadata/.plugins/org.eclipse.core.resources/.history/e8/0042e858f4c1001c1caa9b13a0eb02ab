package tidaMq;

import java.awt.Window.Type;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;



class main
{
	public static void useQueue() {
		
	}
	
	public static void createQueue() {
		
	}
	
	 public static void main (String[] args) throws IOException
	 {
//		 List<queue> listQueue = new ArrayList<>();
//		 queue q = new 	queue() ; 
		 QueueNow queueNow =new QueueNow() ;
		 
		//Creating a File object for directory
	      File directoryPath = new File("/home/buidat/eclipse-workspacjava /tidaMqFile");
	      //List of all files and directories
	      File filesList[] = directoryPath.listFiles();
	      System.out.println("List of files and directories in the specified directory:");
	      for(File file : filesList) {
	    	  WriteToDiskThread read = new WriteToDiskThread();
	    	  
	    	  List<String> list = read.ReadFromFile(file);
	    	  String fileName = file.getName() ;
	    	  queue nq = new queue(list.size(), fileName.split("\\.")[0], "1");
	    	  
	    	  for(String s:list) {
	    		  nq.enqueue(s);
	    	  }
	    	  queueNow.listQueue.add(nq) ;
	    	  System.out.println(file.getName()) ;
	      }
		
		 
	     while(true) {
	    	 String str ;
	    	 Scanner sc = new Scanner(System.in) ;
	    	 str = sc.nextLine() ; 
	    	 
			 ExecutorService executor = Executors.newSingleThreadExecutor();
	    	 
	    	 str= str.trim() ;
	    	 String[] arg = str.split(" ") ; 
	    	 
	    	 switch (arg[0]) {
	    	 	case "create":
	    	 		queue newque = new queue(Integer.parseInt(arg[1]), arg[2], arg[3]) ;
	    	 		File myfile0 = new File("/home/buidat/eclipse-workspacjava /tidaMqFile/"+ arg[2] + ".txt");
	    	 		if (myfile0.createNewFile()) {
	    	 	        System.out.println("File created: " + myfile0.getName());
	    	 	      } else {
	    	 	        System.out.println("File already exists.");
	    	 	      }
	    	 		queueNow.listQueue.add(newque) ;
	    	 		queueNow.setQueue(arg[2]);
	    	 		break ;
	    	 	case "use":
	    	 		queueNow.setQueue(arg[1]) ;
	    	 		break ;
				case "add":
					queueNow.addToQueue(arg, executor);
					break;
				case "pop":
					queueNow.popQueue(arg, executor) ;
					break;
				case "get":
					queueNow.peekQueue() ;
					break;
				case "list":
					queueNow.list();
					break;
				case "listAll":
					for(queue q2 : queueNow.listQueue) {
						System.out.println(q2.name);
					}
					break ;
				case "delete": 
					queueNow.deleteQueue(executor);
					break ;
				default:
					System.out.println("Sai cú pháp, mời nhập lại");
					break;
			}
	    	executor.shutdown() ;
	    	
    	    while (!executor.isTerminated()) {
    	    	System.out.println("thread running..");
            }
	    	
	     } 
	     
	    
	     
	 }
}